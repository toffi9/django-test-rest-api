sudo: required
language: python

services:
  - docker

env:
  - DOCKER_COMPOSE_VERSION=1.18.0

before_cache:
  # Save tagged docker images
  - >
    mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

cache:
  bundler: true
  directories:
    - $HOME/docker

before_install:
  # Installing newest docker-ce
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y install docker-ce
  - docker -v
  # Installing docker-compose
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose -v
  # Load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi

install:
  - cp .env.example .env
  - docker-compose -f dev.yml build

script:
  - make isort
  - make lint
  - make test

# TODO: pushing to ECR when master or develop is ok
# after_success:
#   - if [ "$TRAVIS_BRANCH" == "master" ]; then
#     docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
#     docker push USER/REPO;
#     fi
